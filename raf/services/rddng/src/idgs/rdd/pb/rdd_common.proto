//
// RDD interface, defining common message 
//
package idgs.rdd.pb;

option java_outer_classname = "PbRddCommon";


// state of rdd
enum RddState {
  INIT                  = 0;
  CREATED               = 1;
  PREPARED              = 2;
  PROCESSING            = 3;
  TRANSFORM_COMPLETE    = 4;
  READY                 = 5;
  ERROR                 = 6;
  NA                    = 100;
}

// error message
enum RddResultCode {
  RRC_SUCCESS                         = 0;
  RRC_NOT_SUPPORT                     = 1;
  RRC_UNKOWN_ERROR                    = 2;
  RRC_INVALID_KEY                     = 3;
  RRC_INVALID_VALUE                   = 4;
  RRC_RDD_NOT_FOUND                   = 5;
  RRC_PARTITION_ACTOR_NOT_FOUND       = 6;
  RRC_INVALID_PARTITION_ACTOR         = 7;
  RRC_TRANSFORMER_NOT_FOUND           = 8;
  RRC_ACTION_NOT_FOUND                = 9;
  RRC_INVALID_EXPRESSION_SIZE         = 10;
  RRC_INVALID_FIELD                   = 11;
  RRC_FIELD_NOT_FOUND                 = 12;
  RRC_DATA_CONVERT_ERROR              = 13;
  RRC_INVALID_RDD_INPUT               = 14;
  RRC_TRANSFORMER_PARAM_NOT_FOUND     = 15;
  RRC_ACTION_PARAM_NOT_FOUND          = 16;
  RRC_INVALID_TRANSFORMER_PARAM       = 17;
  RRC_INVALID_ACTION_PARAM            = 18;
  RRC_BY_ZERO                         = 19;
  RRC_JOIN_TYPE_NOT_FOUND             = 20;
  RRC_RDD_STATE_INIT                  = 21;
  RRC_RDD_STATE_DEPENDENCY_PROCESSING = 22;
  RRC_RDD_STATE_PROCESSING            = 23;
  RRC_RDD_STATE_TRANSFORM_COMPLETE    = 24;
  RRC_STORE_NOT_FOUND                 = 25;
  RRC_EMPTY_MESSAGE                   = 30;
  RRC_INVALID_KEY_SCHEMA              = 31;
  RRC_INVALID_VALUE_SCHEMA            = 32;
  RRC_PARSE_EXPRESSION_ERROR          = 33;
  RRC_RDD_NAME_EXISTS                 = 34;
  RRC_RDD_ERROR                       = 35;
}

enum PersistType {
  ORDERED 	      = 1;
  UNORDERED       = 2;
  MULTI_ORDERED   = 3;
  MULTI_UNORDERED = 4;
  NONE            = 5;
  LIST            = 6;
}