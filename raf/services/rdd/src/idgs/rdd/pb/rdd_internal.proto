//
// Internal RDD interface, defining messages, 
// # between RDD service and RDD actor
// # between RDD service and RDD partition
// # between RDD actor and RDD actor
// # between RDD actor and RDD partition
//
package idgs.rdd.pb;

import "idgs/rdd/pb/rdd_common.proto";
import "idgs/pb/rpc_message.proto";

option java_outer_classname = "PbRddInternal";


// common request with no input
message RddRequest {
  optional uint32 partition = 1;
}

// common response with result code
message RddResponse {
  required RddResultCode result_code = 1 [default = RRC_UNKOWN_ERROR];
  optional uint32 partition = 2;
}

message RddPartitionInfo {
  required uint32 partition = 1;						// partition of store
  required idgs.pb.ActorId actor_id = 2;				// actor id and member id of rdd parititon
}

// to get rdd and it's rdd partition actor
// the message with operation "GET_PARTITION_ACTOR" send from depending rdd to current rdd
message RddActorInfo {
  required idgs.pb.ActorId rdd_id = 1;									// current rdd id
  required RddState state = 2 [default = INIT];							// state of rdd
  repeated RddPartitionInfo rdd_partition = 3;							// partition actor of current rdd
}

// when rdd partition process done
// message with operation "RDD_PARTITION_READY" send from rdd partition to rdd 
message PartitionProcessResult {
  required uint32 partition = 1;											// partition of store
  optional RddResultCode result_code = 2 [default = RRC_UNKOWN_ERROR];		// result code of partition process
}

// request of rdd partition 
// message "CREATE_DELEGATE_PARTITION" send from rdd to rdd service to create rdd partition
message CreateDelegatePartitionRequest {
  required string store_name = 1;				// name of store
  required uint32 partition = 2;				// partition
  required string rdd_name = 3;					// name of rdd
}

// request of rdd partition 
// message "CREATE_RDD_PARTITION" send from rdd to rdd service to create rdd partition of each partition
message CreateRddPartitionRequest {
  required uint32 partition = 1;							// partition of store
  required idgs.pb.ActorId rdd_id = 2;						// actor id of rdd
  required string rdd_name = 4;								// name of rdd 
}

message DependingRddPartition {
  repeated string depending_partition_actor_id = 1;			// actor id of depending partition
}

// response of rdd partition 
// message "CREATE_RDD_PARTITION_RESPONSE" send from rdd service to rdd after create rdd partition
message CreateRddPartitionResponse {
  required RddResultCode result_code = 1 [default = RRC_UNKOWN_ERROR];		// result code of create rdd partition
  required RddPartitionInfo rdd_partition = 2;								// actor id of partition 
}
