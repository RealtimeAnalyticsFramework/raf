//
// Attachment types of action 
//
package idgs.rdd.pb;

import "idgs/pb/expr.proto";
import "idgs/rdd/pb/rdd_svc.proto";

option java_outer_classname = "PbRddAction";


message CountActionResult {
  required uint64 size = 1;
}

message SumActionResult {
  required double total = 1;
}

message AvgActionResult {
  optional double total = 1;   // intermediate result
  optional uint64 count = 2;   // intermediate result
  optional double avg = 3;     // the final result
}

message LookupActionResult {
  repeated string values = 1;  // serialized to string type of 'sequence of value'
}

message KeyValuePair {
  required bytes key = 1;      // serialized to string type of 'key' 
  required bytes value  = 2;	// serialized to string type of 'value'
}

message KeyValuesPair {
  required bytes key = 1;      // serialized to string type of 'key' 
  repeated bytes value  = 2;	// repeated serialized to string type of 'value'
}
  
message CollectActionResult {
  repeated KeyValuesPair pair = 1;
}

enum ExportType {
  LOCAL_FILE 	= 0;
  HDFS		 	= 1;
  MYSQL			= 2;
  HBASE			= 3;
}

message DBConnParam {
  required string host = 1;			// IP or domain name
  required string port = 2;			// port
  optional string url = 3;			// connect url
  optional string user_name = 4;	// user name of DB
  optional string password = 5;		// password of DB
}

message ExportActionRequest {
  required ExportType type = 1 [default = LOCAL_FILE];	// type of export data
  optional string file_name = 2;				// use for loacl file.
  optional DBConnParam param = 3;				// use for DB
}

message ExportActionResult {
}

message FieldPair {
  required idgs.pb.Expr expr = 1;
  optional string field_name = 2;
  optional idgs.pb.DataType field_type = 3;
  required bool desc = 4 [default = false];
}

message TopNActionRequest {
  optional uint64 top_N = 1;
  optional uint64 start = 2;
  repeated FieldPair order_field = 3;
}

message TopNActionData {
  message OrderPair {
    required bytes key = 1;
    required KeyValuePair pair = 2;
  }
  required string key_name = 1;
  repeated OrderPair data = 2;
}

message TopNActionResult {
  repeated KeyValuePair pair = 1;
}
