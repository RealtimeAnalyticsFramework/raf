package idgs.pb;

option java_outer_classname = "PbClusterConfig";

// state of member
enum MemberState {
  MS_INACTIVE = 0;              // after leaving
  MS_INITIAL  = 1;							// when member is created
  MS_TAKEN    = 2;							// when leading find a joined position for new joined member
  MS_JOINED   = 3;							// after received whole membership table
  MS_PREPARED = 4;  						// after handled partition event when member's role's local store; after handled delta member event if not local store 
  MS_ACTIVE   = 5;							// after service initialized
}

message MemberService {
  //role: for local store
  optional bool local_store    = 1 [ default = true ];
}

message EndPoint {
  enum AddressFamily {
    PAF_INET  = 1; // IP v4
    PAF_INET6 = 2; // IP v6
    PAF_RDMA  = 3; // @todo infiniband, RDMA
  }

  optional AddressFamily af = 1 [default = PAF_INET];
  optional string host      = 2 [default = "0.0.0.0"];
  required uint32 port      = 3 [default = 4682]; // INTC
}

enum MemberFlag {
  MF_LEADING                = 1;   // leading
  MF_REPLICATED_STORE_OK    = 2;   // replicated stores are ready
  MF_PARTITIONED_STORE_OK   = 4;   // partitioned stores are ready
}


// Member Information
message Member {
  // -----------------------------------------------------------------------------
  // following attributes are from config file or environment variables.
  // -----------------------------------------------------------------------------
  optional EndPoint public_address = 1;
  optional EndPoint inner_address  = 2;
  
  required MemberService service   = 3;
  optional float weight            = 4 [ default = 100 ];
  
  // -----------------------------------------------------------------------------
  // following attributes are provisioned when starting up, then never be changed.
  // -----------------------------------------------------------------------------
    
  // identifier when member joins, leading will find a position to put the joined member
  optional int32 id                = 5 [ default = -1 ]; 
  optional uint32 node_id          = 6 [ default = 0 ];
  optional uint32 pid              = 7 [ default = 0 ];

  // -----------------------------------------------------------------------------
  // following attributes will be provisioned and changed in run time.
  // -----------------------------------------------------------------------------

  // when member leaves, member will be marked as INACTIVE
  optional MemberState state       = 8; // [default = MS_INACTIVE];
  // @see MemberFlag
  optional uint64 flags            = 9; // [default = 0];           
}

message ModuleConfig {
  required string name         = 1;
  optional bool   enable       = 2 [default = true];
  required string module_path  = 3;
  optional string config_path  = 4;
}

message LogConfig {
  // parameter of logging system
  optional string log_option = 1 [default = ""];
  
  // Directory of log, default is "./logs"
  optional string log_dir    = 2 [default = "./logs"];
}

message TimeoutConfig {
  // Message transfer timeout, in ms, default is 500ms
  optional uint32 msg_delivery_timeout = 1 [default = 500];
  
  // Data accessing timeout, in ms, default is 500ms
  optional uint32 data_access_timeout  = 2 [default = 500];

  // Distributed computing timeout, in ms, default is 5s
  optional uint32 computing_timeout    = 3 [default = 5000];
}

// configuration of cluster, each member has its own configuration file.
message ClusterConfig {
  optional uint32 thread_count          = 1 [default = 3];         // worker thread pool size
  optional uint32 io_thread_count       = 2 [default = 3];         // io thread pool size
  optional uint32 max_idle_thread       = 3 [default = 1];         // max idle thread to save energy

  optional uint32 socket_buffer_size    = 4 [default = 2097152 ];  // 1024 * 1024 * 2
  optional uint32 mtu                   = 5 [default = 0];         // ethernet UDP MTU = 1500 - 20(IP) - 8(UDP)
  optional uint32 batch_message         = 6 [default = 200];       // batch send/recv messages
  optional uint32 batch_buffer          = 7 [default = 40960];     // batch send/recv buffer
  optional bool port_auto_adjust        = 8 [default = true];      // auto adjust inter/outer port if not available.
  
  // max reserved member size
  optional uint32 reserved_member_size  = 9 [default = 100];
  // group name
  optional string group_name            = 10 [default = "idgs" ];
  
  // partition count, should be a primary number.
  required uint32 partition_count       = 11 [default = 1021];
  // max backup number 
  optional uint32 max_replica_count     = 12 [default = 3];
  
  optional LogConfig log_config         = 13;
  
  optional TimeoutConfig timeout_config = 14;
  
  repeated ModuleConfig modules         = 15;

  // configuration of the member.
  required Member member                = 16;
}


